<?php

namespace Hypebeast\WordpressBundle\Tests\DependencyInjection;

use Hypebeast\WordpressBundle\DependencyInjection\HypebeastWordpressExtension;
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\Yaml\Parser;

/**
 * Test class for HypebeastWordpressExtension.
 * Generated by PHPUnit on 2011-09-28 at 12:14:01.
 * 
 * @covers Hypebeast\WordpressBundle\DependencyInjection\HypebeastWordpressExtension
 */
class HypebeastWordpressExtensionTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var HypebeastWordpressExtension
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new HypebeastWordpressExtension;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @expectedException \Symfony\Component\Config\Definition\Exception\InvalidConfigurationException
     */
    public function testLoadRequiresWordpressPath() {
        $config = $this->mockConfig();
        unset($config['wordpress_path']);
        $this->object->load(array($config), new ContainerBuilder);
    }

    /**
     * @expectedException \Symfony\Component\Config\Definition\Exception\InvalidConfigurationException
     */
    public function testLoadRequiresNotEmptyWordpressPath() {
        $config = $this->mockConfig();
        $config['wordpress_path'] = '';
        $this->object->load(array($config), new ContainerBuilder);
    }

    /**
     * Mock configuration values for testing
     *
     * @return array
     */
    protected function mockConfig() {
        $parser = new Parser();
        return $parser->parse('wordpress_path: /foo/bar');
    }

}

?>
